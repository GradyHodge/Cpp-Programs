<mxfile host="app.diagrams.net" modified="2021-02-05T07:20:51.604Z" agent="5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.9 Safari/537.36" etag="TLQIIhnNQznTQ2K_NnHT" version="14.2.9" type="github">
  <diagram id="9cNVHAZUlY2b7lYtHniF" name="Page-1">
    <mxGraphModel dx="835" dy="484" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="NoxHskXCf12VWR5uTIz3-16" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="40" y="640" width="320" height="440" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-1" value="" style="whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
          <mxGeometry x="40" y="200" width="360" height="360" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-2" value="Part 1: Temperature Conversion&lt;br&gt;&lt;br&gt;&amp;nbsp;int main()&lt;br&gt;{&lt;br&gt;&lt;br&gt;&amp;nbsp;// Get the temperature from the user&lt;br&gt; float tempF = getTemp();&lt;br&gt;&lt;br&gt;&amp;nbsp;// Do the conversion&lt;br&gt; float tempC = (5.0 / 9.0) * (tempF - 32.0);&lt;br&gt;&lt;br&gt;&amp;nbsp;// display the output&lt;br&gt;&lt;br&gt;&amp;nbsp;// I don&#39;t want showpoint because I don&#39;t want to show a point!&lt;br&gt;&lt;br&gt; cout.setf(ios::fixed);&lt;br&gt; cout.precision(0);&lt;br&gt; cout &amp;lt;&amp;lt; &quot;Celsius: &quot; &amp;lt;&amp;lt; tempC &amp;lt;&amp;lt; endl;&lt;br&gt; return 0;&lt;br&gt;}" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="50" y="220" width="350" height="300" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="NoxHskXCf12VWR5uTIz3-1" target="NoxHskXCf12VWR5uTIz3-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-5" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="40" y="40" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-6" value="&lt;h1&gt;Assignment 22 - Pseudocode&lt;/h1&gt;&lt;p&gt;Please create pseudocode for the following functions. The pseudocode is to be turned in by hand in class&lt;br&gt;for face-to-face students and submit it as a PDF for online students:&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="50" y="50" width="380" height="100" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-7" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="440" y="200" width="390" height="360" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-9" value="main()&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;getTemp()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PROMPT &amp;lt;-- &quot;What is your temp in F&quot;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;GET temp&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; SET tempF = getTemp()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; RETURN tempF&lt;br&gt;&amp;nbsp; &amp;nbsp;END&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;convertToCelsius(tempF)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; SET tempC = (tempF in conversion formula)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; RETURN &amp;lt;-- tempC&lt;br&gt;&amp;nbsp; &amp;nbsp;END&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;display(tempC)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PUT &quot;Celsius:&amp;nbsp; &quot; &lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; READ tempC&lt;br&gt;&amp;nbsp; &amp;nbsp;END&lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;br&gt;END main()&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="470" y="220" width="320" height="300" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-12" value="Part 2: Child Tax Credit&lt;br&gt;&lt;br&gt;int main() {&lt;br&gt;&lt;br&gt;&amp;nbsp;// prompt for stats&lt;br&gt;&amp;nbsp; &amp;nbsp;double income = getIncome();&lt;br&gt;&amp;nbsp; &amp;nbsp; int numChildren = getNumChildren();&lt;br&gt;&lt;br&gt;&amp;nbsp;// display message&lt;br&gt;&amp;nbsp; &amp;nbsp; cout.setf(ios::fixed);&lt;br&gt;&amp;nbsp; &amp;nbsp; cout.precision(2);&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; cout &amp;lt;&amp;lt; &quot;Child Tax Credit: $ &quot;;&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; if (qualify(income))&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; cout &amp;lt;&amp;lt; 1000.0 * (float)numChildren &amp;lt;&amp;lt; endl;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; else&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; cout &amp;lt;&amp;lt; 0.0 &amp;lt;&amp;lt; endl;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; return 0;&lt;br&gt;}" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="50" y="660" width="290" height="300" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="260" y="1080" as="sourcePoint" />
            <mxPoint x="260" y="1080" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-15" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="440" y="640" width="400" height="440" as="geometry" />
        </mxCell>
        <mxCell id="NoxHskXCf12VWR5uTIz3-17" value="main()&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;// prompt for stats&lt;br&gt;&amp;nbsp; &amp;nbsp;getIncome()&amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PROMPT &amp;lt;-- user stats&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; GET income&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; SET income = getIncome()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; RETURN income&lt;br&gt;&amp;nbsp; &amp;nbsp;END&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;getNumChildren()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PROMPT &amp;lt;-- user stats&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; GET numChildren&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; SET numChildren = getNumChildren()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; RETURN numChildren&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;//compute tax credit&lt;br&gt;&amp;nbsp; &amp;nbsp;qualifyIncome(income, numChildren)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; IF income &amp;lt;-- qualify is true&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PUT 1000.0 * numChildren&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ELSE&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PUT 0.0&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; END&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;// display message&lt;br&gt;&amp;nbsp; &amp;nbsp;display()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PUT &quot;Child Tax Credit: $ &quot;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; READ qualifyIncome()&lt;br&gt;&amp;nbsp; &amp;nbsp;END&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;END MAIN" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="470" y="670" width="350" height="390" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
